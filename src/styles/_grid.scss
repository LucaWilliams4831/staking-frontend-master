/* ==========================================================================
   Grid layout
   ========================================================================== */

@use 'sass:math';

@mixin grid {
  /**
   * Grid variables
   *
   * Variables that define the structure and logic of the grid
   */
  $grid-columns: 12 !default;
  $grid-gutter: 20px !default;
  $grid-container-max-width: 1280px !default;
  $grid-container-gutter: 32px !default;

  $grid-breakpoints: (
    sm: 600px,
    md: 900px,
    lg: 1200px,
    xl: 1800px
  ) !default;

  /**
   * Grid container
   *
   * Must only contain `.row` children.
   */
  %container-base {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    padding-left: $grid-container-gutter;
    padding-right: $grid-container-gutter;
    box-sizing: border-box;
  }

  .container {
    @extend %container-base;
    max-width: $grid-container-max-width;
  }

  .container-fluid {
    @extend %container-base;
  }

  /**
   * Grid row
   */
  .row {
    margin-left: math.div($grid-gutter, -2);
    margin-right: math.div($grid-gutter, -2);
    box-sizing: border-box;
    font-size: 0;

    > * {
      font-size: 1rem;
    }
  }

  /**
   * Grid columns
   */
  [class^='col-'],
  [class*=' col-'] {
    display: inline-block;
    vertical-align: top;
    width: 100%;
    min-height: 1px;
    padding-left: math.div($grid-gutter, 2);
    padding-right: math.div($grid-gutter, 2);
    box-sizing: border-box;
  }

  /* Cell dimensions
    ========================================================================== */
  @for $i from 1 through $grid-columns {
    .col-#{$i} {
      width: (math.div(100%, $grid-columns) * $i);
    }
    .col-offset-#{$i} {
      margin-left: (math.div(100%, $grid-columns) * $i);
    }
  }
  .d-none {
    display: none !important;
  }
  /* Cell breakpoints
   ========================================================================== */
  @each $breakpoint-name in map-keys($grid-breakpoints) {
    $breakpoint-width: map-get($grid-breakpoints, $breakpoint-name);

    @media (min-width: $breakpoint-width) {
      .col-#{$breakpoint-name}-offset-0 {
        margin-left: 0;
      }

      @for $i from 1 through $grid-columns {
        .col-#{$breakpoint-name}-#{$i} {
          width: (math.div(100%, $grid-columns) * $i);
        }
        .col-#{$breakpoint-name}-offset-#{$i} {
          margin-left: (math.div(100%, $grid-columns) * $i);
        }
        .d-#{$breakpoint-name}-none {
          display: none !important;
        }
        .d-#{$breakpoint-name}-block {
          display: block !important;
        }
      }
    }
  }
}

@media screen and (max-width: 899px) {
  .row {
    &-sm-revers {
      flex-direction: column-reverse;
    }
  }
}
@include grid;
